- hosts: 192.168.33.12
  vars:
    python_version: 3.5.0
    user: vagrant
    home: /home/{{ user }}
    conda_virtualenv: ml_env
    activate_home: "{{ home }}/.pyenv/versions/{{ python_version }}/envs/{{ conda_virtualenv }}"
  tasks:
    - name: package list update
      sudo: yes
      apt: update_cache=yes
      tags: initial_setup

    - name: package list upgrade
      apt: upgrade=full
      sudo: yes
      tags: initial_setup

    - name: Apt install same packeged
      sudo: yes
      ignore_errors: True
      apt: pkg={{ item }} state=installed
      with_items:
      - git
      - gcc
      - make
      - openssl
      - build-essential
      - zlib1g-dev
      - libbz2-dev
      - libssl-dev
      - libreadline-dev
      - libsqlite3-dev
      - pkg-config
      - gfortran
      - libopenblas-dev
      - libblas-dev
      - liblapack-dev
      - libpng-dev
      - libjpeg8-dev
      - libfreetype6
      - libfreetype6-dev
      - libsm6
      - libxrender-dev
      tags: pyenv

    - name: check pyenv is installed
      command: test -x {{ home }}/.pyenv/bin/pyenv
      sudo: no
      register: pyenv_existence
      ignore_errors: yes
      tags: pyenv

    - name: git clone pyenv
      git: repo=https://github.com/yyuu/pyenv.git dest={{ home }}/.pyenv/
      when: pyenv_existence|failed
      ignore_errors: yes
      tags: pyenv

    - name: check .profile is exist
      stat: path={{ home }}/.profile
      register: rofile_existence
      tags: pyenv

    - name: set .profile config by copying from file
      copy: src=./files/profile dest={{ home }}/.profile
#      when: bash_profile_existence.stat.md5 is not defined
      ignore_errors: yes
      tags: set_profile

    - name: install pyenv's python and rehash
      shell: . {{ home }}/.profile && pyenv install -v {{ python_version }} && pyenv rehash && pyenv global {{ python_version }}
      when: pyenv_existence|failed
      tags: pyenv

    - name: pip install global python pkgs
      pip: name={{ item }} state=latest executable={{ home }}/.pyenv/shims/pip
      with_items:
      - pip
      tags: global_python

    - name: pip install same packages
      pip: name={{ item }} state=latest executable={{ home }}/.pyenv/shims/pip
      with_items:
        - django
        - djangorestframework
        - markdown
        - django-filter
      tags: pip_package_install
#    - name : Install pyenv
#      shell: |
#        cd /usr/local/
#        sudo git clone git://github.com/yyuu/pyenv.git ./pyenv
#        sudo mkdir -p ./pyenv/versions ./pyenv/shims
#        cd /usr/local/pyenv/plugins/
#        sudo git clone git://github.com/yyuu/pyenv-virtualenv.git
#        echo 'export PYENV_ROOT="/usr/local/pyenv"' | sudo tee -a /etc/profile.d/pyenv.sh
#        echo 'export PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"' | sudo tee -a /etc/profile.d/pyenv.sh
#        source /etc/profile.d/pyenv.sh
#    - name : change_sudoes
#      sudo: yes
#      replace:
#        dest: /etc/sudoers
#        backup: yes
#        regexp: '^Defaults.*secure_path=.*'
#        replace: '#Defaults secure_path=""'
#        validate: 'visudo -cf %s'
#    - name : change_sudoes_2
#      sudo: yes
#      lineinfile:
#        dest: /etc/sudoers
#        state: present
#        backup: yes
#        regexp: '^#Defaults.*'
#        line: 'Defaults env_keep += "PATH"'
#    - name : change_sudoes_3
#      sudo: yes
#      lineinfile:
#        dest: /etc/sudoers
#        state: present
#        regexp: '^#Defaults.*'
#        line: 'Defaults env_keep += "PYENV_ROOT"'
#    - name : pyenv_python_install
#      shell: |
#        sudo pyenv install -v {{ python_version }}
#        sudo pyenv global {{ python_version }}
#        sudo pyenv virtualenv {{ python_version }} dev01-{{ python_version }}
#        sudo pyenv local dev01-{{ python_version }}
#    - name : Install_django_framework
#      shell: |
#        pip install django
#        pip install djangorestframework
#        pip install markdown
#        pip install django-filter